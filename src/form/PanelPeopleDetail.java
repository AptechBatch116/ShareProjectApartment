/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.awt.Component;
import java.awt.Font;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author zcmgyu
 */
public final class PanelPeopleDetail extends javax.swing.JPanel {

    /**
     * Creates new form ResidentManager
     */
    public PanelPeopleDetail() {
        initComponents();
        initPeopleDetail(null);
        initWidthTable();
        JTableHeader header = tblPeopleDetail.getTableHeader();
        header.setDefaultRenderer(new HeaderRenderer(tblPeopleDetail));
        initCellAlign();
        // Chỉnh màu nền của table
        // jScrollPane1.getViewport().setBackground(Color.WHITE);
    }
    void initCellAlign() {
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        tblPeopleDetail.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);
        tblPeopleDetail.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        tblPeopleDetail.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        tblPeopleDetail.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
        tblPeopleDetail.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
        tblPeopleDetail.getColumnModel().getColumn(9).setCellRenderer(rightRenderer);
        tblPeopleDetail.getColumnModel().getColumn(10).setCellRenderer(rightRenderer);
    }
    private static class HeaderRenderer implements TableCellRenderer {

        DefaultTableCellRenderer renderer;

        public HeaderRenderer(JTable table) {
            renderer = (DefaultTableCellRenderer) table.getTableHeader().getDefaultRenderer();
            renderer.setHorizontalAlignment(JLabel.CENTER);
            renderer.setFont(renderer.getFont().deriveFont(Font.BOLD));
        }

        @Override
        public Component getTableCellRendererComponent(
                JTable table, Object value, boolean isSelected,
                boolean hasFocus, int row, int col) {
            Component component = renderer.getTableCellRendererComponent(
                    table, value, isSelected, hasFocus, row, col);
            component.setFont(component.getFont().deriveFont(Font.BOLD));
            return component;
        }
    }

    void initWidthTable() {
        TableColumnModel columnModel = tblPeopleDetail.getColumnModel();
        int[] width = {40, 150, 80, 70, 80, 80, 80, 80, 200, 80, 80};
        for (int i = 0; i < width.length; i++) {
            columnModel.getColumn(i).setPreferredWidth(width[i]);
        }
    }

    final void initPeopleDetail(String sql) {
        Vector vColumn = new Vector();
        Vector vData = new Vector();
        if (sql == null) {
            sql = "select h.ID, h.Name [Họ và tên], h.Birthday [Ngày sinh], h.Gender [Giới tính],"
                    + " h.Birthplace [Nơi sinh], h.[Native Country] [Dân tộc], h.Nation [Quốc tịch],"
                    + " h.Occupation [Nghề nghiệp], h.Workplace [Nơi công tác],"
                    + " h.[Date of arrival] [Ngày ở],  r.Room [Số phòng]\n"
                    + "from tblHuman h, tblRoom r \n"
                    + "where h.RoomID = r.id";
        }
        System.out.println(sql);
        try (Connection cn = Tools.getConn();
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql);) {
            ResultSetMetaData rsmd = rs.getMetaData();
            for (int i = 1; i <= rsmd.getColumnCount(); i++) {
                vColumn.add(rsmd.getColumnName(i));
            }
            while (rs.next()) {
                Vector vRow = new Vector();
                for (int i = 1; i <= rsmd.getColumnCount(); i++) {
                    vRow.add(rs.getString(i));
                }
                vData.add(vRow);
            }
            tblPeopleDetail.setModel(new DefaultTableModel(vData, vColumn));
        } catch (SQLException ex) {
            Logger.getLogger(ApartmentManagementForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFooter = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPeopleDetail = new org.jdesktop.swingx.JXTable();

        pnlFooter.setBackground(new java.awt.Color(153, 153, 255));

        javax.swing.GroupLayout pnlFooterLayout = new javax.swing.GroupLayout(pnlFooter);
        pnlFooter.setLayout(pnlFooterLayout);
        pnlFooterLayout.setHorizontalGroup(
            pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlFooterLayout.setVerticalGroup(
            pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 82, Short.MAX_VALUE)
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setOpaque(false);

        tblPeopleDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPeopleDetail.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        tblPeopleDetail.setEditable(false);
        jScrollPane1.setViewportView(tblPeopleDetail);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(pnlFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlFooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlFooter;
    private org.jdesktop.swingx.JXTable tblPeopleDetail;
    // End of variables declaration//GEN-END:variables
}
